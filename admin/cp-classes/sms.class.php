<?php/** * SMS Tools * * Zenbership Membership Software * Copyright (C) 2013-2016 Castlamp, LLC * * This program is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program.  If not, see <http://www.gnu.org/licenses/>. * * @author      Castlamp * @link        http://www.castlamp.com/ * @link        http://www.zenbership.com/ * @copyright   (c) 2013-2016 Castlamp * @license     http://www.gnu.org/licenses/gpl-3.0.en.html * @project     Zenbership Membership Software */class sms extends db{    protected $user_id, $user_type;    protected $sms_id;    /**     * Prep an SMS for sending.     */    function prep_sms($user_id, $user_type, $msg)    {        $this->user_id   = $user_id;        $this->user_type = $user_type;        if ($user_type == 'contact') {            $contact = new contact;            $q1      = $contact->get_contact($user_id);        } else if ($user_type == 'rsvp') {            $event                      = new event;            $q1                         = $event->get_rsvp($user_id);            $q1['data']['cell']         = $q1['cell'];            $q1['data']['cell_carrier'] = $q1['cell_carrier'];            $q1['data']['sms_optout']   = $q1['sms_optout'];        } else {            $user = new user;            $q1   = $user->get_user($user_id, '', '0');        }        if (!empty($q1['data']['cell']) && !empty($q1['data']['cell_carrier']) && $q1['data']['cell_carrier'] != 'SMS Unavailable' && $q1['data']['sms_optout'] != '1') {            foreach ($q1['data'] as $name => $value) {                $msg = str_replace('%' . $name . '%', $value, $msg);            }            $basics = array(                'pp_date'         => current_date(),                'pp_url'          => PP_URL,                'pp_company'      => COMPANY,                'pp_company_url'  => $this->get_option('company_url'),                'site_name'       => $this->get_option('site_name'),                'logo'            => $this->get_logo(),                'company_address' => $this->get_option('company_address'),                'company_contact' => $this->get_option('company_contact'),            );            foreach ($basics as $name => $value) {                $msg = str_replace("%$name%", $value, $msg);            }            $send = $this->send_sms($q1['data']['cell'], $q1['data']['cell_carrier'], $msg);            return '1';        } else {            return '0';        }    }    function carrier_list()    {        return array(            'group:USA' => 'xxx',            'Alltel' => '@message.alltel.com',            'AT&T' => '@txt.att.net',            'Boost Mobile' => '@myboostmobile.com',            'Sprint' => '@messaging.sprintpcs.com',            'T-Mobile' => '@tmomail.net',            'US Cellular' => '@email.uscc.netm',            'Verizon' => '@vtext.com',            'Virgin Mobile USA' => '@vmobl.com',            'Voyager Mobile' => '@text.voyagermobile.com',            'West Central Wireless' => '@sms.wcc.net',            'xxx:1' => '',            'group:Canada' => 'xxx',            'Bell Mobility' => '@txt.bell.ca',            'Fido' => '@fido.ca',            'Rogers Wireless' => '@pcs.rogers.com',            'Telus' => '@msg.telus.com',            'Virgin Mobile Canada' => '@vmobile.ca',            'Wind Mobile' => '@txt.windmobile.ca',            'xxx:2' => '',            'group:Australia and New Zealand' => 'xxx',            'Esendex' => '@echoemail.net',            'Optus Zoo' => '@optusmobile.com.au',            'Telecom New Zealand' => '@etxt.co.nz',            'Vodafone New Zealand' => '@mtxt.co.nz',            'xxx:3' => '',            'group:Europe' => 'xxx',            'O2' => '@o2online.de',            'Orange' => '@orange.net',            'T-Mobile Germany' => '@t-mobile-sms.de',            'Virgin Mobile UK' => '@vxtras.com',            'Vodafone Germany' => '@vodafone-sms.de',            'Vodafone Spain' => '@vodafone.es',            'xxx:4' => '',            'group:Other' => 'xxx',            'Claro' => '@sms.ctimovil.com.ar',            'Movistar' => '@sms.movistar.net.ar',            'xxx:5' => '',            'SMS Unavailable' => 'xxx',        );    }    /**     * Send an SMS     */    function send_sms($cell, $carrier, $msg)    {        $fail = '0';        if (empty($cell) || empty($carrier)) {            return '0';        } else {            $carrier_list = $this->carrier_list();            if (array_key_exists($carrier, $carrier_list)) {                $fail = '0';                $to = clean_phone($cell) . $carrier_list[$carrier];            } else {                $to = '';                $fail = '1';            }            if ($fail == '1') {                return '0';            } else {                $msg = stripslashes($msg);                $opt = $this->get_option('sms_from');                if (empty($opt)) {                    $from = COMPANY . ' <' . COMPANY_EMAIL . '>';                } else {                    $from = $this->get_option('sms_from');                }                $headers = 'From: ' . $from . "\r\n";                mail($to, '', $msg, $headers);                // Save                $this->sms_id = $this->insert("                    INSERT INTO `ppSD_saved_sms` (                        `date`,                        `msg`,                        `user_id`,                        `user_type`                    )                    VALUES (                        '" . current_date() . "',                        '" . $msg . "',                        '" . $this->user_id . "',                        '" . $this->user_type . "'                    )                ");                $this->put_stats('sms_sent');                $this->history();                return '1';            }        }    }    function history()    {        if (! empty($this->user_id)) {            global $employee;            $this->add_history('sms', $employee['id'], $this->user_id, '1', $this->sms_id);        }    }}